/**
 * @fileoverview Icon component for displaying SVG icons
 * @module Icon
 * @description Reusable icon component with support for different sizes and colors
 */

import React from 'react';
import styles from './Icon.module.css';

export interface IconProps {
  /** Icon name */
  name: string;
  /** Icon size */
  size?: 'small' | 'medium' | 'large';
  /** Icon color */
  color?: string;
  /** Additional CSS class */
  className?: string;
  /** Click handler */
  onClick?: () => void;
}

/**
 * Icon component
 * @param props - Icon props
 * @returns JSX element
 */
export const Icon: React.FC<IconProps> = ({ 
  name, 
  size = 'medium', 
  color, 
  className,
  onClick 
}) => {
  const iconClass = `${styles.icon} ${styles[size]} ${className || ''}`;
  
  const renderIcon = () => {
    switch (name) {
      case 'email':
        return (
          <svg width="38" height="30" viewBox="0 0 38 30" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M3.36667 29.1667C2.40694 29.1667 1.60625 28.8458 0.964583 28.2042C0.322917 27.5625 0.00138889 26.7611 0 25.8V3.36667C0 2.40694 0.321528 1.60625 0.964583 0.964583C1.60764 0.322916 2.40764 0.00138889 3.36458 0H34.1354C35.0937 0 35.8937 0.321527 36.5354 0.964583C37.1771 1.60764 37.4986 2.40833 37.5 3.36667V25.8021C37.5 26.7604 37.1785 27.5611 36.5354 28.2042C35.8924 28.8472 35.0924 29.1681 34.1354 29.1667H3.36667ZM18.75 14.5C18.9236 14.5 19.0861 14.4736 19.2375 14.4208C19.3875 14.3681 19.5361 14.3035 19.6833 14.2271L34.7437 4.36667C34.941 4.24722 35.0694 4.08403 35.1292 3.87708C35.1889 3.67014 35.1778 3.46389 35.0958 3.25833C35.0431 2.99028 34.8681 2.79583 34.5708 2.675C34.275 2.55556 33.9882 2.57986 33.7104 2.74792L18.75 12.5L3.79167 2.75C3.51389 2.58056 3.23333 2.54444 2.95 2.64167C2.66667 2.73889 2.48472 2.93056 2.40417 3.21667C2.32361 3.43056 2.31319 3.64792 2.37292 3.86875C2.43264 4.08958 2.56042 4.25625 2.75625 4.36875L17.8167 14.2271C17.9639 14.3035 18.1125 14.3681 18.2625 14.4208C18.4139 14.4722 18.5764 14.4979 18.75 14.4979" fill="currentColor"/>
          </svg>
        );
      case 'password-lock':
        return (
          <svg width="30" height="38" viewBox="0 0 30 38" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M6.45833 37.5C5.34444 37.5 4.39583 37.1042 3.6125 36.3125C2.82917 35.5208 2.43889 34.5639 2.45 33.4417V18.2583C2.45 17.1361 2.84583 16.1806 3.6375 15.3917C4.42917 14.6028 5.38472 14.2056 6.5 14.2H8.25V10.6667C8.25 7.69167 9.35 5.15208 11.55 3.04792C13.75 0.943748 16.2639 -0.111111 19.0917 0.00416663C21.6194 0.0972218 23.9444 1.17917 25.8833 3.17917C27.8222 5.17917 28.8361 7.54722 28.925 10.2833V14.2H30.675C31.7889 14.2 32.7375 14.5958 33.5208 15.3875C34.3042 16.1792 34.6944 17.1361 34.6833 18.2583V33.4417C34.6833 34.5639 34.2875 35.5208 33.4958 36.3125C32.7042 37.1042 31.7472 37.5 30.625 37.5H6.45833ZM19.1667 29.2C20.1889 29.2 21.0458 28.8375 21.7375 28.1125C22.4292 27.3875 22.775 26.5125 22.775 25.4875C22.775 24.4625 22.4292 23.5875 21.7375 22.8625C21.0458 22.1375 20.1889 21.775 19.1667 21.775C18.1444 21.775 17.2875 22.1375 16.5958 22.8625C15.9042 23.5875 15.5583 24.4625 15.5583 25.4875C15.5583 26.5125 15.9042 27.3875 16.5958 28.1125C17.2875 28.8375 18.1444 29.2 19.1667 29.2ZM12.375 14.2H25.9583V10.6667C25.9583 8.83056 25.3417 7.29167 24.1083 6.05C22.875 4.80833 21.3583 4.1875 19.5583 4.1875C17.7583 4.1875 16.2417 4.80833 15.0083 6.05C13.775 7.29167 13.1583 8.83056 13.1583 10.6667V14.2H12.375Z" fill="currentColor"/>
          </svg>
        );
      case 'password-hide':
        return (
          <svg width="38" height="24" viewBox="0 0 38 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M19 4.8C24.5 4.8 29.275 7.975 32 12.5C29.275 17.025 24.5 20.2 19 20.2C13.5 20.2 8.725 17.025 6 12.5C8.725 7.975 13.5 4.8 19 4.8ZM19 1C10 1 2.65 6.65 0 12.5C2.65 18.35 10 24 19 24C28 24 35.35 18.35 38 12.5C35.35 6.65 28 1 19 1ZM19 8.5C21.2091 8.5 23 10.2909 23 12.5C23 14.7091 21.2091 16.5 19 16.5C16.7909 16.5 15 14.7091 15 12.5C15 10.2909 16.7909 8.5 19 8.5Z" fill="currentColor"/>
          </svg>
        );
      default:
        return null;
    }
  };

  return (
    <span 
      className={iconClass}
      style={{ color }}
      onClick={onClick}
    >
      {renderIcon()}
    </span>
  );
};

export default Icon;